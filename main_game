#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov  4 23:42:07 2019

@author: ashay
"""

import pygame
import random
pygame.init()

display_width=500
display_height=500
display= pygame.display.set_mode((display_width,display_height))
window_color=(200,200,200)
display.fill(window_color)
pygame.display.update()
button_direction=0

red=(255,0,0)
black=(0,0,0)

apple_image=pygame.image.load('apple.jpg')
snake_head=[display_width/2,display_height/2]
snake_position=[[display_width/2,display_height/2],[display_width/2-10,display_height/2],[display_width/2-20,display_height/2]]
apple_position=[random.randrange(1,50)*10,random.randrange(1,50)*10]

def display_snake(snake_position):
    for position in snake_position:
        pygame.draw.rect(display,red,pygame.Rect(position[0],position[1],10,10))
        
def display_apple(display,apple_position,apple_image):
    display.blit(apple_image,(apple_position[0],apple_position[1]))

def collision_with_boundaries(snake_head):
    if snake_head[0]>=display_width or snake_head[0]<0 or snake_head[1]>=display_height or snake_head[1]<0:
        return 1
    else:
        return 0

def collision_with_boundaries(snake_position):
    snake_head=snake_position[0]
    if snake_head in snake_position[1:]:
        return 1
    else:
        return 0

def move(snake_position):
    if event.type==pygame.KEYDOWN:
        if event.key == pygame.K_LEFT and prev_button !=1:
            button_direction=0
        elif event.key == pygame.K_RIGHT and prev_button !=0:
            button_direction=1
        elif event.key == pygame.K_UP and prev_button !=2:
            button_direction=3
        elif event.key == pygame.K_DOWN and prev_button !=3:
            button_direction=2
        else:
            button_direction=button_direction
    
    if button_direction==0:
        snake_head[0]-=10
    elif button_direction==1:
        snake_head[0]+=10
    elif button_direction==2:
        snake_head[1]+=10
    elif button_direction==3:
        snake_head[1]-=10
    else:
        pass
    
    
    snake_position.insert(0,snake_head)
    snake_position.pop()

def absorb_apple(apple_position,score):
    scores+=1
    apple_position=[random.randrange(1,50)*10,random.randrange(1,50)*10]
    return apple_position,score


def collision_with_apple(apple_position,snake_head,score):
    if snake_head==apple_position:
        apple_position,score=absorb_apple(apple_position,score)
        
def display_final_score(score):
    largeText=pygame.font.Font('freesansbold.ttf',35)
    TextSurf=largeText.render(str("Your final score is "+str(score)),True,black)
    TextRect=TextSurf.get_rect()
    TextRect.center=((display_width/2),(display_height/2))
    pygame.display.update()
    time.sleep(2)


if __name__ == "__main__":
    clock=pygame.time.Clock()
    clock.tick(20)
    
            
    display_snake(snake_position)
    display_apple(display,apple_position,apple_image)
    
    move(snake_position)
    
    pygame.display.update()
    
